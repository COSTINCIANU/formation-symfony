security:
    encoders: # declaration de encoder pour le cryptage de mot de passe super securise 
        App\Entity\User:
            algorithm: bcrypt # algorithm pour l'hash de password
            # La configuration d'un encodeur avec "bcrypt" comme algorithme est obsolète depuis Symfony 4.3, utilisez plutôt "auto".
    
            # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: null }
        in_database:  #ici on declare les proprieté de provaider pour de comparison et verification dans la bdd si ça existe déjà
            entity:
                class: App\Entity\User # dans l'entite de User  dans la bdd
                property: email   # et cherche par sont email pour compare dans la bdb
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin: # le firewalls lit de haut en bas donc si on met les admin apre le main il prend en compte les premier firewalls de main 
            # nous on veut dire attention nous on est sur le /admin on veut prendre le firewalls admin vec ses propriéte
            # donc comment il est plus specifique que le main on doit le metre avant le main et en deçu de dev ça ne pose pas de probleme 
            # Le pattern du FireWall Une expression régulière qui permet de delimiter la partie à sécuriser
            pattern: ^/admin
            anonymous: true

            provider: in_database  # provider cherche des information dans la bdd
            
            form_login:  # ce form_login il est diferent se pour la gestion de back-end administration des annonces ilest diffent de l'autre declare plus haut 
                login_path: admin_account_login  # ici on donne le chemain pour alle sur le form de login se account_login qui se trouve dans le dossier admin/account et a la @Route("/admin/login" name="admin_account_login")
                check_path: admin_account_login  # et le chemain pour verifie si le information donner dans le form login sont varis sont les meme admin_account_login

            logout:  # pour  quand on veut se déconnectée on utilise le path de front
                path: admin_account_logout
                target: homepage # on renvoi ver la page d'accueil
        main:
            anonymous: true

            provider: in_database

            form_login:
                login_path: account_login
                check_path: account_login
            
            logout:
                path: account_logout
                target: account_login
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        # Rôle qui représente un utilisateur non connecté  - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
